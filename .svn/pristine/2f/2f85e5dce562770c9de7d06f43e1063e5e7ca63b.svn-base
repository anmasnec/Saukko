using System;
using System.Collections.Generic;
using Jypeli;
using Jypeli.Assets;
using Jypeli.Controls;
using Jypeli.Widgets;

// @author Sneck Annika
// @version 1.11.2019

/// <summary>
// Saukko-peli
// Pelissä ohjataan saukkoa, jonka täytyy uida vedessä syömässä kalaa ja näin kerätä pisteitä. Saukon on varottava lähestymästä pallokalaa, joka on myrkyllinen sekä on uitava pakoon haita. Jos syö pallokalan tai hai saa kiinni,
// peli päättyy. Saukon on myös käytävä aika ajoin maalla haukkaamassa happea ja tästä seurataan ajastinta. Pelissä on maksimipistemäärä, jota tavoitellaan.

// Tehty: Saukko-hahmon ohjaus nuolinäppäimillä, pelissä kalat ja viholliset liikkuvat, kalat syödään (tuhotaan), hai ja pallokala päättävät pelin, hai alkaa jahtaamaan saukkoa jos saukko ui riittävän lähellä, olioiden kuvat, taustan kuva. 

// TODO: Lisää kenttään alaraja ja yläraja niin, ettei muut kuin saukko pääse ylärajan läpi maalle (MITEN TEHDÄÄN??), Hain häipyminen hetkeksi kun tarpeeksi kauan odotetaan maalla, pistelaskurit, maksimipisteet, happiajastin ja saukon
// kasvu pelin alussa. Lisäksi hain sekä herkkukalojen random-ilmestyminen peliin, ohjeet pelin pelaamiseen, mitä tapahtuu saavuttaessa maksimipisteet, ulkonäön viimeistely, koodin muokkaus kuten taulukot, silmukat ym..
// Mahdollisesti sähköankeriaat peliin, jotka randomisti antavat sähköiskun eli päättävät pelin.
/// </summary>

public class Saukko : PhysicsGame
{
    // Taustakuva https://pixabay.com/fi/photos/ranska-haute-savoie-aravis-lake-4566669/ 30.10.2019
    Image taustaKuva = LoadImage("JarviSuur");

    // <summary>
    /// Aloitetaan peli. Kutsutaan kentälle saukko, kalat sekä viholliset. Saukon aloituspiste on maalla, josta lähdetään nuolinäppäimillä veteen jahtaamaan kaloja.
    /// </summary>
    public override void Begin()
    {
        
        Level.Background.Image = taustaKuva;
        
        
        PhoneBackButton.Listen(ConfirmExit, "Lopeta peli");
        Keyboard.Listen(Key.Escape, ButtonState.Pressed, ConfirmExit, "Lopeta peli");
        Level.CreateBorders();
        //LisaaNappaimet();
        BoundingRectangle alaosa = new BoundingRectangle(new Vector(Level.Left, 0), Level.BoundingRect.BottomRight);
        BoundingRectangle ylaosa = new BoundingRectangle(Level.BoundingRect.TopLeft, new Vector(Level.Right, 0));
        
        PhysicsObject saukko = LuoSaukko(this, "saukko");

        AddCollisionHandler(saukko, "SyotavaKala", SaukonKalastus);
        AddCollisionHandler(saukko, "MyrkkyKala", SaukonKalastus);
        AddCollisionHandler(saukko, "hai", SaukonKalastus);
       
        Keyboard.Listen(Key.Left, ButtonState.Pressed, LiikutaSaukkoa, "Liikuta saukkoa vasemmalle", saukko, new Vector(-150, 0));
        Keyboard.Listen(Key.Right, ButtonState.Pressed, LiikutaSaukkoa, "Liikuta saukkoa oikealle", saukko, new Vector(150, 0));
        Keyboard.Listen(Key.Up, ButtonState.Pressed, LiikutaSaukkoa, "Liikuta saukkoa ylös", saukko, new Vector(0, 150));
        Keyboard.Listen(Key.Down, ButtonState.Pressed, LiikutaSaukkoa, "Liikuta saukkoa alas", saukko, new Vector(0, -150));
        
       
        for (int i = 0; i < 20; i++)
            LuoPerusKala(this, alaosa, 100, "SyotavaKala");
        
        for (int i = 0; i < 6; i++)
            LuoPalloKala(this, alaosa, 100, "MyrkkyKala");
     
        for (int i = 0; i < 3; i++)
            LuoTukki(this, alaosa, 100, "tukki");

        for (int i = 0; i < 1; i++)
            LuoHai(this, alaosa, 100, "hai", saukko);

         for (int i = 0; i < 10; i++)
            LuoHerkkuKala(this, alaosa, 100, "SyotavaKala");
     }

    /// <summary>
    /// Aliohjelma luo pelaajan eli saukon.
    /// </summary>
    
    private static PhysicsObject LuoSaukko(PhysicsGame peli, string tunniste)
    {
        double leveys = 80;
        double korkeus = 50;
        PhysicsObject saukko = new PhysicsObject(leveys, korkeus, Shape.Circle);
        saukko.Position = new Vector(-200, 320);
        //saukko.Angle = RandomGen.NextAngle();
        saukko.Color = Color.Brown;
        //Vector suunta = RandomGen.NextVector(0, vauhti);
        saukko.Mass = 10.0;
        saukko.Velocity = new Vector(0, 0);
        saukko.CanRotate = false;
        saukko.Tag = tunniste;
        saukko.Image = LoadImage("Saukko"); // https://pixabay.com/fi/photos/el%C3%A4in-saukko-nis%C3%A4k%C3%A4s-el%C3%A4intarha-755677/ 30.10.2019
        peli.Add(saukko);
        return saukko;
    }


    /// <summary>
    /// Aliohjelma liikuttaa saukkoa.
    /// </summary>
    /// <param name="saukko">Liikutettava pelaaja</param>
    /// <param name="suunta">saukon suunta</param>
    private static void LiikutaSaukkoa(PhysicsObject saukko, Vector suunta)
    {
        //Vector suunta = (10, 10);
        saukko.Move(suunta);
        //saukko.Velocity = new Vector();
        saukko.LinearDamping = 0.95;
    }


    /// <summary>
    /// Aliohjelma luo vihollisen eli hain. Hai jahtaa saukkoa, kun saukko on riittävän lähellä haita. Hain saadessa saukon kiinni peli päättyy.
    /// </summary>
    private static PhysicsObject LuoHai(PhysicsGame peli, BoundingRectangle rect, double vauhti, string tunniste, PhysicsObject saukko) 
    {
        double leveys = 140;
        double korkeus = 80;
        PhysicsObject hai = new PhysicsObject(leveys, korkeus, Shape.Circle);
        hai.Position = RandomGen.NextVector(rect);
        //hai.Angle = RandomGen.NextAngle();
        hai.Color = Color.DarkGray;
        //Vector suunta = RandomGen.NextVector(0, vauhti);
        hai.Velocity = RandomGen.NextVector(5,15);
        hai.AngularDamping = 0.95;
        hai.CanRotate = false;
        //hai.Hit(suunta);
        hai.Tag = tunniste;
        hai.Tag = "hai";
        hai.Image = LoadImage("hai"); // https://pixabay.com/fi/photos/silkkinen-hain-shark-utelias-meren-541863/ 30.10.2019
        FollowerBrain seuraajanAivot = new FollowerBrain(saukko);
        hai.Brain = seuraajanAivot;
        seuraajanAivot.DistanceFar = 250;
        //hai.Position = BoundingRectangle.alaosa; // MITEN HAIN JA MUUT KALAT SAA PYSYMÄÄN ALAOSASSA ELI VEDESSÄ??
        // hai.Position = new Vector(200, -320); 
        peli.Add(hai);
        return hai;
    }

    
    /// <summary>
    /// Aliohjelma luo saukon ravinnon eli kalan. TODO: Lisää pisteet.
    /// </summary>
    private static PhysicsObject LuoPerusKala(PhysicsGame peli, BoundingRectangle rect, double vauhti, string tunniste)
    {
        double leveys = RandomGen.NextDouble(10, 60);
        double korkeus = RandomGen.NextDouble(10, 30);
        PhysicsObject perusKala = new PhysicsObject(leveys, korkeus, Shape.Circle);
        perusKala.Position = RandomGen.NextVector(rect);
        //hai.Angle = RandomGen.NextAngle();
        perusKala.Color = Color.Gray;
        //Vector suunta = RandomGen.NextVector(0, vauhti);
        perusKala.Velocity = RandomGen.NextVector(20, 0);
        perusKala.AngularDamping = 1.0;
        perusKala.CanRotate = false;
        //hai.Hit(suunta);
        perusKala.Tag = tunniste;
        perusKala.Tag = "SyotavaKala";
        perusKala.Image = LoadImage("kala"); // https://pixabay.com/fi/photos/thunnus-tonnikala-kalat-69319/ 30.10.2019
        peli.Add(perusKala);
        return perusKala;
    }


    /// <summary>
    /// Aliohjelma luo saukon erikoisravinnon eli herkkukalan. TODO: Lisää pisteet (enemmän kuin peruskalasta).
    /// </summary>
    private static PhysicsObject LuoHerkkuKala(PhysicsGame peli, BoundingRectangle rect, double vauhti, string tunniste)
    {
        double leveys = 60;
        double korkeus = 30;
        PhysicsObject herkkuKala = new PhysicsObject(leveys, korkeus, Shape.Circle);
        herkkuKala.Position = RandomGen.NextVector(rect);
        //hai.Angle = RandomGen.NextAngle();
        herkkuKala.Color = Color.Turquoise;
        //Vector suunta = RandomGen.NextVector(0, vauhti);
        herkkuKala.Velocity = RandomGen.NextVector(20, 80);
        herkkuKala.CanRotate = false;
        herkkuKala.Mass = 10;
        //hai.Hit(suunta);
        herkkuKala.Tag = tunniste;
        herkkuKala.Tag = "SyotavaKala";
        herkkuKala.Image = LoadImage("herkkukala"); // https://pixabay.com/fi/photos/yksitt%C3%A4inen-akvaarioissa-kalat-2377242/ 30.10.2019
        peli.Add(herkkuKala);
        return herkkuKala;
    }


    /// <summary>
    /// Aliohjelma luo vedessä kelluvia tukkeja jotka hidastavat saukon liikkumista, koska niitä joutuu kiertää. 
    /// </summary>
    private static PhysicsObject LuoTukki(PhysicsGame peli, BoundingRectangle rect, double vauhti, string tunniste) 
    {
        double leveys = RandomGen.NextDouble(140, 260);
        double korkeus = RandomGen.NextDouble(130, 160);
        PhysicsObject tukki = new PhysicsObject(leveys, korkeus, Shape.Circle);
        tukki.Position = RandomGen.NextVector(rect);
        //hai.Angle = RandomGen.NextAngle();
        tukki.Color = Color.DarkBrown;
        //Vector suunta = RandomGen.NextVector(0, vauhti);
        tukki.Velocity = RandomGen.NextVector(10, 0);
        tukki.CanRotate = false;
        tukki.Mass = 60.0;
        //hai.Hit(suunta);
        tukki.Tag = tunniste;
        tukki.Image = LoadImage("PidempiTukki"); // https://pixabay.com/fi/photos/lokit-kelan-vipu-pitkin-hakkuu-957496/ 30.10.2019
                                                 // tukki.SetImage
        peli.Add(tukki);
        return tukki;
    }


    /// <summary>
    /// Aliohjelma luo vihollisen eli pallokalan. Pallokalan syöminen päättää pelin.
    /// </summary>
    private static PhysicsObject LuoPalloKala(PhysicsGame peli, BoundingRectangle rect, double vauhti, string tunniste)
    {
        double leveys = 100;
        double korkeus = 70;
        PhysicsObject palloKala = new PhysicsObject(leveys, korkeus, Shape.Circle);
        palloKala.Position = RandomGen.NextVector(rect);
        //hai.Angle = RandomGen.NextAngle();
        palloKala.Color = Color.Orange;
        //Vector suunta = RandomGen.NextVector(0, vauhti);
        palloKala.Velocity = RandomGen.NextVector(10, 50);
        palloKala.CanRotate = false;
        //hai.Hit(suunta);
        palloKala.Tag = tunniste;
        palloKala.Tag = "MyrkkyKala";
        palloKala.Image = LoadImage("PallokalaOranssi"); // https://pixabay.com/fi/photos/pufferfish-pallokala-kala-74950/ 30.10.2019
        peli.Add(palloKala);
        return palloKala;
    }

    // TODO: Luo mahdoliisesti ankeriasfunktio


    /// <summary>
    /// Aliohjelma kertoo mitä tapahtuu kalan syönnissä. Jos syödään syötävä kala (peruskala tai enemmän pisteitä tuova herkkukala), kala häviää.
    /// Jos saukko syö myrkyllisen pallokalan, peli päättyy.
    /// </summary>
    void SaukonKalastus(PhysicsObject saukko, PhysicsObject kohde)
    {
        if (kohde.Tag.ToString() == "SyotavaKala")
        {
            kohde.Destroy();

            //TODO: Generoi syödyistä kaloista uusia kaloja kentälle.

        }

        if (kohde.Tag.ToString() == "MyrkkyKala" || kohde.Tag.ToString() == "hai")
        {
            Exit();

        }

   }
}